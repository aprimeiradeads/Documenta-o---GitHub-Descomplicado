{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Curso GitHub Descomplicado","text":""},{"location":"#apresentacao-do-curso","title":"Apresenta\u00e7\u00e3o do Curso","text":"<p>Bem-vindo(a)! \u00c9 um prazer ter voc\u00ea participando do nosso curso &lt;3</p> <p>O curso GitHub Descomplicado \u00e9 um projeto de extens\u00e3o oferecido pela Turma 4A do curso de An\u00e1lise e Desenvolvimento de Sistemas do IFSul de Sapucaia.</p> <p></p> <p>Voc\u00ea pode nos conhecer melhor atrav\u00e9s do instagram @aprimeirdadeads.</p> <p>As aulas do curso ocorrer\u00e3o nos dias 4, 6, 11 e 13 de novembro, das 19h \u00e0s 20h30, e ser\u00e3o de forma online.</p> <p>Ao final do curso, ser\u00e1 entregue um certificado de 10h aos alunos que participarem de, no m\u00ednimo, 75% das aulas (3 aulas) e entregarem o link de uma GitHub Page feita no seu reposit\u00f3rio.</p>"},{"location":"#documentacao","title":"Documenta\u00e7\u00e3o","text":"<p>Esta GitHub Page \u00e9 a documenta\u00e7\u00e3o do curso GitHub Descomplicado. </p> <p>Aqui voc\u00ea ter\u00e1 acesso ao material de todas as aulas e aos links que foram utilizados.</p> <p>Em caso de qualquer d\u00favida, entre em contato com a gente em nossa comunidade do whatsapp (o link da comunidade foi enviado aos inscritos do curso atrav\u00e9s do email) &lt;3</p> <p>Note</p> <p>O material de cada aula ser\u00e1 liberado aqui na p\u00e1gina no dia em que a aula for ocorrer.</p>"},{"location":"aula01/apresentacao/","title":"Apresenta\u00e7\u00e3o da Aula","text":"<p>O objetivo desta aula \u00e9 introduzir o que \u00e9 controle de vers\u00e3o e, em seguida, apresentar o Git e o Github. Conceitos importantes ser\u00e3o explicados e haver\u00e1 auxilio para o primeiro contato com as plataformas. </p>"},{"location":"aula01/apresentacao/#ministrantes","title":"Ministrantes","text":"Papel Apresenta\u00e7\u00e3o Nome Professora Bruna B\u00f6ch Professora Michelle Moderadores Eduardo, Diego e Nicoly"},{"location":"aula01/apresentacao/#ferramentas-necessarias","title":"Ferramentas Necess\u00e1rias","text":"<p>Para que o aproveitamento da aula seja o m\u00e1ximo, \u00e9 necess\u00e1rio que o aluno acompanhe as pr\u00e1ticas que ser\u00e3o realizadas. Assim, sugerimos que o aluno possua as seguintes ferramentas durante a aula:</p> <ul> <li>Computador/Notebook;</li> <li>Internet.</li> </ul>"},{"location":"aula01/conteudo/","title":"Conte\u00fado","text":""},{"location":"aula01/conteudo/#o-que-e-controle-de-versao","title":"O que \u00e9 controle de vers\u00e3o?","text":"<p>Controle de vers\u00e3o \u00e9 um sistema que registra altera\u00e7\u00f5es no desenvolvimento de software, permitindo que a equipe acesse o hist\u00f3rico de vers\u00f5es anteriores, recupere vers\u00f5es espec\u00edficas e entenda mudan\u00e7as feitas por outros. </p> <p>Ele facilita o trabalho em equipe e individual, possibilitando o registro de vers\u00f5es, codifica\u00e7\u00e3o simult\u00e2nea e integra\u00e7\u00e3o segura e documentada de trabalhos. </p> <p>Um dos sistemas mais conhecidos e utilizados para controle de vers\u00e3o \u00e9 o Git que, em conjunto com o GitHub se tornam ferramentas poderosas e pr\u00e1ticas para colabora\u00e7\u00e3o e armazenamento de projetos de software.</p> <p></p>"},{"location":"aula01/conteudo/#diferenca-entre-git-e-github","title":"Diferen\u00e7a entre Git e GitHub","text":"<p>Enquanto o Git \u00e9 uma ferramenta de controle de vers\u00e3o local, o GitHub \u00e9 uma plataforma online que permite hospedar projetos Git e colaborar com outras pessoas.</p>"},{"location":"aula01/conteudo/#principais-conceitos","title":"Principais Conceitos","text":"Reposit\u00f3rio <ul> <li>Um reposit\u00f3rio \u00e9 o elemento mais b\u00e1sico do GitHub. \u00c9 um lugar onde voc\u00ea pode armazenar seu c\u00f3digo, seus arquivos e o hist\u00f3rico de revis\u00e3o de cada arquivo. Os reposit\u00f3rios podem ter v\u00e1rios colaboradores e podem ser p\u00fablicos ou particulares. </li> </ul> Remoto e Local <ul> <li>Remoto \u00e9 o que est\u00e1 online (nuvem). Local \u00e9 o que est\u00e1 na sua m\u00e1quina</li> </ul> Branch <p>Permite que voc\u00ea isole o trabalho em diferentes linhas de desenvolvimento. Podemos usar uma branch para isolar o trabalho de desenvolvimento sem afetar outros branches no reposit\u00f3rio. Cada reposit\u00f3rio tem um branch padr\u00e3o e pode ter v\u00e1rios outros branches. Voc\u00ea pode fazer merge de um branch em outro branch usando uma pull request</p> <p>Branch Padr\u00e3o</p> <p>Quando voc\u00ea cria um reposit\u00f3rio com um conte\u00fado no GitHub, o GitHub cria o reposit\u00f3rio com uma \u00fanica ramifica\u00e7\u00e3o. Este primeiro branch no reposit\u00f3rio \u00e9 o branch-padr\u00e3o. O branch-padr\u00e3o \u00e9 o branch que GitHub exibe quando algu\u00e9m visita o seu reposit\u00f3rio. O branch padr\u00e3o \u00e9 tamb\u00e9m o branch inicial que o Git verifica localmente quando algu\u00e9m clona o reposit\u00f3rio. A menos que voc\u00ea especifique um branch diferente, o branch-padr\u00e3o em um reposit\u00f3rio \u00e9 o branch de base para novos pull requests e commits de c\u00f3digo.</p> <p>Por padr\u00e3o, o GitHub d\u00e1 ao branch padr\u00e3o o nome main em qualquer novo reposit\u00f3rio.</p> <p></p> <p>Para saber informa\u00e7\u00f5es mais detalhadas sobre branches, acesse este link.</p> Commit <ul> <li>Fazer um \u201ccheckpoint\u201d na sua m\u00e1quina.</li> </ul> <p>Os commits s\u00e3o utilizados para auxiliar o controle do versionamento e as modifica\u00e7\u00f5es de sistemas. Nas solu\u00e7\u00f5es como o Git, por exemplo, o comando commit adiciona as altera\u00e7\u00f5es mais recentes do c\u00f3digo-fonte ao reposit\u00f3rio que \u00e9 utilizado por todos os DEVs. Uma vez executado, portanto, a atualiza\u00e7\u00e3o do sistema se torna dispon\u00edvel para toda a equipe.</p> <p></p> Merge <ul> <li>Combina diferentes branches. </li> </ul> <p></p> Conflitos <ul> <li>Ocorrem quando h\u00e1 mudan\u00e7as conflitantes que precisam ser resolvidas manualmente.</li> </ul> <p></p> Clonar <ul> <li>Fazer um c\u00f3pia exata de um reposit\u00f3rio.</li> </ul> <p></p> Push e Pull <ul> <li>Push: \u00e9 usado para transferir ou enviar o commit, que \u00e9 feito em um branch local em seu computador, para um reposit\u00f3rio remoto como o GitHub.</li> </ul> <p></p> <ul> <li>Pull: \u00e9 usado para buscar e baixar conte\u00fado de reposit\u00f3rios remotos e fazer a atualiza\u00e7\u00e3o imediata ao reposit\u00f3rio local para que os conte\u00fados sejam iguais.</li> </ul> <p></p> <p>Resumindo os dois conceitos: o git pull puxa, traz as altera\u00e7\u00f5es de um reposit\u00f3rio remoto para o local. J\u00e1 push \u00e9 empurrar, ent\u00e3o o git push empurra, leva as altera\u00e7\u00f5es do reposit\u00f3rio local para o remoto</p>"},{"location":"aula01/conteudo/#organizando-e-instalando-as-ferramentas-necessarias","title":"Organizando e Instalando as Ferramentas Necess\u00e1rias","text":"<p>Durante curso iremos utilizar algumas aplica\u00e7\u00f5es e, nesta etapa da aula, iremos instala-las e realizar os passos necess\u00e1rios para o nosso uso.</p> <p>Assim, reproduza os passos a passos abaixo na sua m\u00e1quina para estar preparado para as nossas pr\u00f3ximas aulas! &lt;3</p>"},{"location":"aula01/conteudo/#criando-uma-conta-no-github","title":"Criando uma conta no GitHub","text":"<p>Clique neste link e siga o passo a passo!</p>"},{"location":"aula01/conteudo/#instalando-o-git","title":"Instalando o Git","text":"<p>Assista este v\u00eddeo com o passo a passo.</p>"},{"location":"aula01/conteudo/#instalando-o-vscode","title":"Instalando o VSCode","text":"<p>Assista este v\u00eddeo com o passo a passo.</p>"},{"location":"aula01/conteudo/#instalando-o-github-desktop","title":"Instalando o GitHub Desktop","text":"<p>Assista este v\u00eddeo com o passo a passo.</p>"},{"location":"aula01/conteudo/#de-quais-formas-eu-posso-utilizar-o-github","title":"De quais formas eu posso utilizar o GitHub","text":"<p>Voc\u00ea pode interagir com o GitHub de v\u00e1rias maneiras, dependendo da sua prefer\u00eancia por interface gr\u00e1fica ou linha de comando. Iremos abordar as tr\u00eas op\u00e7\u00f5es mais comuns: IDE's (como Visual Studio Code), terminal e o GitHub Desktop.</p>"},{"location":"aula01/conteudo/#ides-ambientes-de-desenvolvimento-integrados","title":"IDE's (Ambientes de Desenvolvimento Integrados)","text":"<p>Muitas IDEs modernas, como Visual Studio Code, IntelliJ IDEA e PyCharm, t\u00eam integra\u00e7\u00e3o com o Git e o GitHub, permitindo que voc\u00ea trabalhe de maneira eficiente e visual com reposit\u00f3rios GitHub. Veja como elas funcionam com GitHub:</p> <ul> <li>Clonar Reposit\u00f3rios: Voc\u00ea pode clonar reposit\u00f3rios diretamente dentro da IDE, sem precisar sair dela.</li> <li>Commit e Push: As IDEs permitem que voc\u00ea adicione, comite e envie (push) suas altera\u00e7\u00f5es para o GitHub com cliques de bot\u00e3o, simplificando o fluxo de trabalho.</li> <li>Branches e Merge: Ferramentas de gerenciamento de branches facilitam a cria\u00e7\u00e3o, troca e o merge de branches.</li> <li>Pull Requests: Algumas IDEs, como o Visual Studio Code, permitem revisar e criar pull requests direto da interface, o que \u00e9 \u00fatil para projetos colaborativos.</li> </ul> <p>Essas funcionalidades tornam o trabalho com Git e GitHub mais visual e intuitivo, especialmente para desenvolvedores que preferem n\u00e3o usar o terminal.</p> <p>OBS.: em nosso curso iremos utilizar o Visual Studio Code</p>"},{"location":"aula01/conteudo/#terminal","title":"Terminal","text":"<p>O terminal (ou linha de comando) \u00e9 uma maneira poderosa e flex\u00edvel de interagir com o GitHub, especialmente para desenvolvedores que preferem ter controle total sobre o Git. \u00c9 necess\u00e1rio ter o Git instalado no seu computador para usar o terminal com o GitHub.</p>"},{"location":"aula01/conteudo/#github-desktop","title":"GitHub Desktop","text":"<p>O GitHub Desktop \u00e9 uma aplica\u00e7\u00e3o gr\u00e1fica gratuita criada pelo GitHub para facilitar o uso do Git e a intera\u00e7\u00e3o com o GitHub. \u00c9 ideal para quem prefere uma interface gr\u00e1fica, mas n\u00e3o quer usar uma IDE.</p> <ul> <li>Clonar Reposit\u00f3rios: Assim como nas outras op\u00e7\u00f5es, voc\u00ea pode clonar um reposit\u00f3rio GitHub localmente atrav\u00e9s de um simples clique.</li> <li>Commit e Push: Com o GitHub Desktop, voc\u00ea pode ver uma visualiza\u00e7\u00e3o das mudan\u00e7as e fazer commits e push de forma intuitiva.</li> <li>Branches e Merge: Permite criar, trocar e mesclar branches visualmente, facilitando o gerenciamento de diferentes vers\u00f5es do projeto.</li> <li>Sincroniza\u00e7\u00e3o com GitHub: O GitHub Desktop \u00e9 ideal para sincronizar facilmente com o GitHub, enviando (push) e recebendo (pull) mudan\u00e7as.</li> <li>Integra\u00e7\u00e3o com o GitHub: O GitHub Desktop se integra diretamente ao site do GitHub, permitindo visualizar e abrir pull requests diretamente na interface da aplica\u00e7\u00e3o.</li> </ul> <p>O GitHub Desktop \u00e9 uma \u00f3tima op\u00e7\u00e3o para iniciantes ou para quem n\u00e3o quer usar o terminal, mas precisa de um controle maior do Git sem as funcionalidades completas de uma IDE.</p>"},{"location":"aula01/conteudo/#resumo","title":"Resumo","text":"<p>IDE: Ideal para quem quer desenvolver e gerenciar o Git diretamente do editor, com controle visual e integra\u00e7\u00e3o de desenvolvimento.</p> <p>Terminal: Preferido por usu\u00e1rios avan\u00e7ados que querem controle total e r\u00e1pido sobre os comandos do Git.</p> <p>GitHub Desktop: \u00d3timo para iniciantes e para quem prefere uma GUI leve sem a complexidade de uma IDE completa. Essas tr\u00eas abordagens oferecem flexibilidade para trabalhar com o GitHub de acordo com suas prefer\u00eancias e n\u00edvel de experi\u00eancia com Git.</p>"}]}